{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "rgName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group"
      },
      "defaultValue": "RTC-Demo"
    },
    "rgLocation": {
      "type": "string",
      "metadata": {
        "description": "The Azure Region to deploy the resources to. Please use 'az account list-locations --output table' to find available locations."
      }
    },
    "namePrefix": {
      "type": "string",
      "maxLength": 11,
      "metadata": {
        "description": "A prefix, max 11 characters, lower case letters and numbers only."
      },
      "defaultValue": "rtcdemo"
    }
  },
  "variables": {
    "rgDeploymentName": "[concat(parameters('rgName'), 'Deployment', uniqueString(subscription().id))]",
    "storageAccountName": "[concat(parameters('namePrefix'), uniqueString(subscription().id, parameters('rgName')))]",
    "vnetName": "[concat(parameters('namePrefix'), '-vnet')]",
    "subnetName": "[concat(parameters('namePrefix'), '-subnet')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-10-01",
      "name": "[parameters('rgName')]",
      "location": "[parameters('rgLocation')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('rgDeploymentName')]",
      "resourceGroup": "[parameters('rgName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('rgLocation')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "resources": [
                {
                  "type": "blobServices/containers",
                  "apiVersion": "2019-06-01",
                  "name": "[concat('default/', 'vhds')]",
                  "dependsOn": [
                    "[variables('storageAccountName')]"
                  ]
                },
                {
                  "type": "blobServices/containers",
                  "apiVersion": "2019-06-01",
                  "name": "[concat('default/', 'scripts')]",
                  "dependsOn": [
                    "[variables('storageAccountName')]"
                  ]
                }
              ]
        
            },
            {
                "type": "Microsoft.Network/virtualNetworks",
                "name": "[variables('vnetName')]",
                "apiVersion": "2016-03-30",
                "location": "[parameters('rgLocation')]",
                "comments": "Virtual network for overall solution",
                "tags": {
                "displayName": "Virtual Network"
                },
                "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                    "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                    "name": "[variables('subnetName')]",
                    "properties": {
                        "addressPrefix": "10.0.1.0/24"
                    }
            }
          ]
        }
      }

          ],
          "outputs": {
            "virtualNetwork": {
                "type": "string",
                "value": "[variables('vnetName')]"
            },
            "subnet": {
                "type": "string",
                "value": "[variables('subnetName')]"
            },
            "rgName": {
                "type": "string",
                "value": "[parameters('rgName')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {}
}

